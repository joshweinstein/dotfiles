#!/bin/zsh

# If there isn't an ArgMaps session running in tmux, set one up.
if ! $(tmux has-session -t ArgMaps); then
    cd argmaps
    tmux new-session -d -s ArgMaps -n main
    tmux send-keys -t ArgMaps:0 'rvm use jruby-head && export JAVA_OPTS= && bundle exec torquebox run -J="\-Xmx1024m \-Xms256m \-server"' C-m
    tmux split-window -v -p 25
    tmux send-keys -t ArgMaps:0 "rvm use jruby-head && export JRUBY_OPTS='-X+O'; export JAVA_HOME=/Library/Java/JavaVirtualMachines/1.7.0.jdk/Contents/Home" C-m
    tmux send-keys -t ArgMaps:0 "testdrb -Ispec spec/models/evidences_relationship_spec.rb"
    tmux split-window -h -p 25
    tmux send-keys -t ArgMaps:0 "rvm use jruby-head && export JRUBY_OPTS='-X+O'; export JAVA_HOME=/Library/Java/JavaVirtualMachines/1.7.0.jdk/Contents/Home; bundle exec guard" C-m
    tmux split-window -h -p 25
    tmux send-keys -t ArgMaps:0 "rvm use jruby-head && export JRUBY_OPTS='-X+O'; export JAVA_HOME=/Library/Java/JavaVirtualMachines/1.7.0.jdk/Contents/Home; spork" C-m

    # tmux new-window -n Server
    # tmux send-keys -t ArgMaps:1 "trinidad" C-m

    tmux select-window -t 0
    tmux select-pane -t 0
fi

# Now that there's definitely an ArgMaps session, attach to it.
tmux attach-session -t ArgMaps
